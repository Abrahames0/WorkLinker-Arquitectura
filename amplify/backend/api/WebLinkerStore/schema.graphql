type Producto @model @auth(rules: [{allow: public}, {allow: owner}, {allow: private}, {allow: groups, groups: ["usuarios"], operations: [read, create, update, delete]}, {allow: groups, groups: ["proveedores"], operations: [read, update, delete, create]}, {allow: groups, groups: ["repartidores"], operations: [read, create, update, delete]}]) {
  id: ID!
  nombreProducto: String
  descripcion: String
  precio: String
  stock: Int
  imagenURL: AWSURL
  categoria: String
  proveedorID: ID! @index(name: "byProveedor")
}

type RepartirProducto @model @auth(rules: [{allow: owner}, {allow: private}, {allow: groups, groups: ["proveedores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["repartidores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["usuarios"], operations: [read, create, update, delete]}]) {
  id: ID!
  repartidorID: ID! @index(name: "byRepartidor")
}

type Carrito @model @auth(rules: [{allow: public}, {allow: owner}, {allow: private}, {allow: groups, groups: ["proveedores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["repartidores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["usuarios"], operations: [read, create, update, delete]}]) {
  id: ID!
  TotalCarrito: Float
  ProductoCarritos: [ProductoCarrito] @hasMany(indexName: "byCarrito", fields: ["id"])
}

type ProductoCarrito @model @auth(rules: [{allow: public}, {allow: owner}, {allow: private}, {allow: groups, groups: ["proveedores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["repartidores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["usuarios"], operations: [read, create, update, delete]}]) {
  id: ID!
  carritoID: ID! @index(name: "byCarrito")
  precio: Float
  cantidad: Int
  subTotal: String
  nombreProducto: String
}

type Repartidor @model @auth(rules: [{allow: public}, {allow: owner}, {allow: private}, {allow: groups, groups: ["repartidores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["proveedores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["usuarios"], operations: [read, create, update, delete]}]) {
  id: ID!
  NombreRepartidor: String
  DescripcionRepartidor: String
  RepartirProductos: [RepartirProducto] @hasMany(indexName: "byRepartidor", fields: ["id"])
}

type Proveedor @model @auth(rules: [{allow: public}, {allow: owner}, {allow: private}, {allow: groups, groups: ["proveedores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["repartidores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["usuarios"], operations: [read, create, update, delete]}]) {
  id: ID!
  correo: String
  apellidosProveedor: String
  calleProveedor: String
  numeroProveedor: String
  codigoPostalProveedor: Int
  estadoProveedor: String
  paisProveedor: String
  Productos: [Producto] @hasMany(indexName: "byProveedor", fields: ["id"])
  nombreProveedor: String
}

type Usuarios @model @auth(rules: [{allow: public}, {allow: private}, {allow: owner}, {allow: groups, groups: ["usuarios"], operations: [read, create, update, delete]}, {allow: groups, groups: ["proveedores"], operations: [read, create, update, delete]}, {allow: groups, groups: ["repartidores"], operations: [read, create, update, delete]}]) {
  id: ID!
  nombreUsuario: String
  apellidoUsuario: String
  correo: String
  telefono: String
  calleUsuario: String
  numeroUsuario: String
  colonia: String
  codigoPostalUsuario: Int
  municipioUsuario: String
  Carrito: Carrito @hasOne
  estadoUsuario: String
  paisUsuario: String
}
 